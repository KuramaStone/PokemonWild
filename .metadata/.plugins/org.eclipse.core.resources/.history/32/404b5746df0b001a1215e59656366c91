package me.brook.PokemonCreator.graphics;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import me.brook.PokemonCreator.PokemonCreator;
import me.brook.PokemonCreator.world.PokeWorld;

/*
 * This class deals with the JFrame
 */
public class PokeWindow extends JFrame {

	public static final int SIZE = 720;
	private static final long serialVersionUID = -887579245455944705L;

	// Constructor
	private PokemonCreator creator;

	// Misc
	private PokeDrawer drawer;

	// Current Screen location
	private int xOffset, yOffset;

	public PokeWindow(PokemonCreator creator) {
		this.creator = creator;
		try {
			createWindow();
		}
		catch(IOException e) {
			e.printStackTrace();
		}
	}

	private void createWindow() throws IOException {
		this.setTitle("Pokemon Wild");
		this.setSize(PokeWindow.SIZE + 360, PokeWindow.SIZE);
		this.setResizable(false);
		this.setLocationRelativeTo(null);
		this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

		this.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				System.exit(0);
			}
		});
		
		drawer = new PokeDrawer(this, SIZE);
		GridBagConstraints gbc = new GridBagConstraints();

		drawer.setPreferredSize(new Dimension(SIZE, SIZE));
		creator.getMaker().addComponents(gbc);
		
		
		
		JPanel northeast = new JPanel();
		northeast.add(options, BorderLayout.NORTH);
		
		this.add(northeast, BorderLayout.WEST);
		this.add(drawer, BorderLayout.EAST);
		
		this.setVisible(true);
	}

	/*
	 * Draw the areas
	 */
	public void drawWorld(PokeWorld world) {
		drawer.drawWorld(world);
	}

	public void drawImage() {
		drawer.repaint();
	}
	
	public PokeDrawer getDrawer() {
		return drawer;
	}

}
