package me.brook.PokemonCreator.input;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import me.brook.PokemonCreator.PokemonCreator;
import me.brook.PokemonCreator.graphics.PokeWindow;
import me.brook.PokemonCreator.world.PokeWorld;
import me.brook.PokemonCreator.world.area.PokeArea;
import me.brook.PokemonCreator.world.tile.Tile;
import me.brook.PokemonCreator.world.tile.TileType;

public class PokeMaker {
	
	private PokemonCreator creator;
	private PokeWorld world;
	private PokeWindow window;
	private MouseInput input;
	
	public PokeMaker(PokemonCreator creator) {
		this.creator = creator;
		
		world = creator.getWorld();
		window = creator.getWindow();
		input = creator.getInput();
	}

	public void tick() {
		
	}

	public void addComponents(GridBagConstraints gbc) {
		gbc.fill = GridBagConstraints.HORIZONTAL;

		gbc.insets = new Insets(10, 2, 2, 2);
		gbc.gridx = 0;
		gbc.gridy = 0;
		options.add(save, gbc);

		gbc.gridx = 1;
		gbc.gridy = 0;
		options.add(open, gbc);

		gbc.insets = new Insets(100, 2, 2, 2);
		gbc.fill = GridBagConstraints.HORIZONTAL;
		
		gbc.gridx = 0;
		gbc.gridy = 2;
		addArea.setPreferredSize(new Dimension(100, 40));
		options.add(addArea, gbc);

		gbc.gridx = 1;
		gbc.gridy = 2;
		deleteArea.setPreferredSize(new Dimension(128, 40));
		options.add(deleteArea, gbc);
	}
	
	private final ActionListener addAreaAction = new ActionListener() {
		
		@Override
		public void actionPerformed(ActionEvent e) {
			List<Tile> tiles = new ArrayList<>();
			PokeArea area = new PokeArea(0, 0, tiles);

			area.addTile(new Tile(1, 1, TileType.GRASS));
			area.addTile(new Tile(1, 2, TileType.TALL_GRASS));
			area.addTile(new Tile(1, 3, TileType.FLOWER));
			world.addArea(area);
		}
	};
	

}
