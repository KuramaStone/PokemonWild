package me.brook.PokemonCreator.input;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ScrollPaneConstants;

import me.brook.PokemonCreator.PokemonCreator;
import me.brook.PokemonCreator.graphics.PokeDrawer;
import me.brook.PokemonCreator.world.PokeWorld;
import me.brook.PokemonCreator.world.area.PokeArea;
import me.brook.PokemonCreator.world.tile.Tile;
import me.brook.PokemonCreator.world.tile.TileData;
import me.brook.PokemonCreator.world.tile.TileType;

public class PokeMaker {
	
	private PokemonCreator creator;
	private PokeWorld world;
	private MouseInput input;

	private PokeDrawer drawer;
	private TileData currentTileData = new TileData(TileType.GRASS, 0);
	
	public PokeMaker(PokemonCreator creator) {
		this.creator = creator;
		
		world = creator.getWorld();
		drawer = creator.getDrawer();
	}

	public void tick(MouseInput mouseInput) {
		if(mouseInput == null) {
			return;
		}
		
		Point mouse = drawer.getMousePosition();

		if(mouse != null) {
			Point tile = drawer.getTileLocationAt(mouse);
			world.getAreas().get(0).addTile(new Tile(tile.x, tile.y, currentTileData));
		}
	}

	public JPanel addComponents(GridBagConstraints gbc) throws IOException {
		
		JButton addArea = new JButton("Add Area");
		addArea.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				world.addArea(new PokeArea(0, 0, new ArrayList<>()));
			}
		});
		
		addArea.setSize(100, 40);
		addArea.setLocation(25, 100);
		
		JButton deleteArea = new JButton("Remove Area");
		deleteArea.setLocation(100, 50);
		deleteArea.setSize(50, 50);
		
		JButton save = new JButton(new ImageIcon(ImageIO.read(new File("C:\\Users\\Stone\\PokemonWild\\Pokemon Wild\\res\\misc\\save_icon.png"))));
		save.setPreferredSize(new Dimension(64, 64));
		
		JButton open = new JButton(new ImageIcon(ImageIO.read(new File("C:\\Users\\Stone\\PokemonWild\\Pokemon Wild\\res\\misc\\open_icon.png"))));
		open.setPreferredSize(new Dimension(64, 64));

		addArea.setPreferredSize(new Dimension(100, 40));
		
		JPanel options = new JPanel();
		options.setLayout(new GridBagLayout());
		
		gbc.fill = GridBagConstraints.HORIZONTAL;

		gbc.insets = new Insets(10, 2, 2, 2);
		gbc.gridx = 0;
		gbc.gridy = 0;
		options.add(save, gbc);

		gbc.gridx = 1;
		gbc.gridy = 0;
		options.add(open, gbc);

		gbc.insets = new Insets(100, 2, 2, 2);
		gbc.fill = GridBagConstraints.HORIZONTAL;
		
		gbc.gridx = 0;
		gbc.gridy = 1;
		addArea.setPreferredSize(new Dimension(100, 40));
		options.add(addArea, gbc);

		gbc.gridx = 1;
		gbc.gridy = 1;
		deleteArea.setPreferredSize(new Dimension(128, 40));
		options.add(deleteArea, gbc);
		
		JScrollPane tileSelector = new JScrollPane(new TileScroller(this),
				   ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS,  
				   ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		tileSelector.setPreferredSize(new Dimension(320, 300));
		gbc.gridwidth = (int) tileSelector.getPreferredSize().getWidth();
		gbc.gridheight = (int) tileSelector.getPreferredSize().getHeight();
		gbc.gridx = 0;
		gbc.gridy = 3;
		options.add(tileSelector, gbc);
		
		return options;
	}
	
	public void setCurrentType(TileData data) {
		this.currentTileData = data;
	}
	

}
